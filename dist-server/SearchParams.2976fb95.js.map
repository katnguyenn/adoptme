{"version":3,"sources":["../src/Components/useBreedList.js","../src/Components/Pet.js","../src/Components/Results.js","../src/Components/SearchParams.js"],"names":["localCache","useBreedList","animal","breedList","setBreedList","status","setStatus","requestBreedList","res","fetch","json","breeds","Pet","name","breed","images","location","id","hero","length","Results","pets","map","pet","city","state","SearchParams","ANIMALS","setLocation","setAnimal","setBreed","setPets","theme","setTheme","ThemeContext","requestPets","e","preventDefault","target","value","backgroundColor"],"mappings":";AAqCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EArCD,IAAA,EAAA,QAAA,SAEA,MAAMA,EAAa,GAEJ,SAASC,EAAaC,GAC3B,MAACC,EAAWC,IAAgB,EAAS,EAAA,UAAA,KACpCC,EAAQC,IAAa,EAAS,EAAA,UAAA,YA8BlC,OA5BO,EAAA,EAAA,WAAA,KACDJ,EAIMF,EAAWE,GAClBE,EAAaJ,EAAWE,IAMbK,iBACXH,EAAa,IACbE,EAAU,WAEJE,MAAAA,QAAYC,mDAC+BP,KAE3CQ,QAAaF,EAAIE,OAGvBV,EAAWE,GAAUQ,EAAKC,QAAU,GACpCP,EAAaJ,EAAWE,IACxBI,EAAU,UAfVC,GANAH,EAAa,KAuBlB,CAACF,IAED,CAACC,EAAWE;;ACJJO,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA7Bf,IAAA,EAAA,QAAA,oBA6BeA,EAAAA,QAAAA,qBA3Bf,MAAMA,EAAM,EACRC,KAAAA,EACAX,OAAAA,EACAY,MAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,GAAAA,MAGAC,IAAAA,EAAO,gDAKP,OAJDH,EAAOI,SACND,EAAOH,EAAO,KAIT,EAAA,EAAA,MAAA,EAAD,KAAA,CAAM,eAAgBE,IAAM,UAAU,iBAAtC,SAAA,EACG,EAAA,EAAA,KAAA,MAAA,CAAA,UACI,EAAA,EAAA,KAAA,MAAA,CAAK,IAAKC,EAAM,IAAKL,OAEzB,EAAA,EAAA,MAAA,MAAA,CAAK,UAAU,qGAAf,SAAA,EACI,EAAA,EAAA,KAAA,KAAA,CAAKA,SAAAA,KACL,EAAA,EAAA,KAAA,KAAA,CAAM,YAAEX,OAAYY,OAAWE,aAM/BJ,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACNAQ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1Bf,IAAA,EAAA,EAAA,QAAA,UA0BeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAxBf,MAAMA,EAAU,EAAGC,KAAAA,MAEZ,EAAA,EAAA,KAAA,MAAA,CAAK,UAAU,uDACd,SAACA,EAAKF,OAGHE,EAAKC,IAAIC,IACJ,EAAA,EAAA,KAAA,EAAD,QAAA,CACK,OAAQA,EAAIrB,OAEZ,KAAMqB,EAAIV,KACV,MAAOU,EAAIT,MACX,OAAQS,EAAIR,OACZ,YAAaQ,EAAIC,SAASD,EAAIE,QAC9B,GAAIF,EAAIN,IALHM,EAAIN,MALlB,EAAA,EAAA,KAAA,KAAA,CAAA,SAAA,oBAoBIG,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACkFAM,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA5Gf,IAAA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,cAyGeA,EAAAA,QAAAA,qBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAtGf,MAAMC,EAAU,CAAC,OAAQ,MAAO,MAAO,SAAU,WAC3CD,EAAe,KAEX,MAACV,EAAUY,IAAe,EAAS,EAAA,UAAA,KAClC1B,EAAQ2B,IAAa,EAAS,EAAA,UAAA,KAC9Bf,EAAOgB,IAAY,EAAS,EAAA,UAAA,KAC5BT,EAAMU,IAAW,EAAS,EAAA,UAAA,KAC1BpB,IAAU,EAAaT,EAAAA,SAAAA,IACvB8B,EAAOC,IAAY,EAAWC,EAAAA,YAAAA,EAAX,SAMXC,eAAAA,IACL3B,MAAAA,QAAYC,iDAC6BP,cAAmBc,WAAkBF,KAG9EJ,QAAaF,EAAIE,OACvBqB,EAAQrB,EAAKW,MAGjB,OAbU,EAAA,EAAA,WAAA,KACNc,KACD,KAYC,EAAA,EAAA,MAAA,MAAA,CACI,UAAU,uBADd,SAAA,EAEI,EAAA,EAAA,MAAA,OAAA,CAAM,UAAU,iHACZ,SAAUC,IACNA,EAAEC,iBACFF,KAHR,SAAA,EAMI,EAAA,EAAA,MAAA,QAAA,CAAO,UAAU,eAAe,QAAQ,WAAxC,SAAA,CAAA,YAEI,EAAA,EAAA,KAAA,QAAA,CACA,UAAU,iBACV,GAAG,WACH,SAAWC,GAAMR,EAAYQ,EAAEE,OAAOC,OAAQ,MAAOvB,EAAU,YAAY,iBAE/E,EAAA,EAAA,MAAA,QAAA,CAAO,UAAU,eAAe,QAAQ,SAAxC,SAAA,CAAA,UAEA,EAAA,EAAA,MAAA,SAAA,CACQ,UAAU,iBACV,GAAG,SACH,MAAOd,EACP,SAAUkC,GAAKP,EAAUO,EAAEE,OAAOC,OAClC,OAAQH,GAAKP,EAAUO,EAAEE,OAAOC,OALxC,SAAA,EAAA,EAAA,EAAA,KAAA,SAAA,IASSZ,EAAQL,IAAIpB,IACT,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAOA,EACVA,SAAAA,GADuBA,WAOxC,EAAA,EAAA,MAAA,QAAA,CAAO,UAAU,eAAe,QAAQ,QAAxC,SAAA,CAAA,SAEA,EAAA,EAAA,MAAA,SAAA,CACQ,UAAU,iBACV,GAAG,QACH,MAAOY,EACP,SAAUsB,GAAKN,EAASM,EAAEE,OAAOC,OACjC,OAAQH,GAAKN,EAASM,EAAEE,OAAOC,OALvC,SAAA,EAAA,EAAA,EAAA,KAAA,SAAA,IASS5B,EAAOW,IAAIR,IACR,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAOA,EACVA,SAAAA,GADsBA,WAOvC,EAAA,EAAA,MAAA,QAAA,CAAO,UAAU,eAAe,QAAQ,QAAxC,SAAA,CAAA,SAEI,EAAA,EAAA,MAAA,SAAA,CACI,UAAU,iBACV,MAAOkB,EACP,SAAUI,GAAKH,EAASG,EAAEE,OAAOC,OACjC,OAAQH,GAAKH,EAASG,EAAEE,OAAOC,OAJnC,SAAA,EAMI,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,WAAd,SAAA,eACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,OAAd,SAAA,UACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,aAAd,SAAA,gBACA,EAAA,EAAA,KAAA,SAAA,CAAQ,MAAM,eAAd,SAAA,yBAGR,EAAA,EAAA,KAAA,SAAA,CAAQ,UAAU,4DAA4D,MAAO,CAAEC,gBAAiBR,GAAxG,SAAA,eAGH,EAAA,EAAA,KAAA,EAAD,QAAA,CAAS,KAAMX,QAQZK,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"SearchParams.2976fb95.js","sourceRoot":"../server","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst localCache = {};\n\nexport default function useBreedList(animal) {\n    const [breedList, setBreedList] = useState([]);\n    const [status, setStatus] = useState(\"unloaded\");\n\n    useEffect(() => {\n        if (!animal) {\n            // If no animal, return an empty list\n            setBreedList([]);\n            // if already requested, serve it\n        } else if (localCache[animal]) {\n            setBreedList(localCache[animal])\n        } else {\n            // otherwise, go to API and get it\n            requestBreedList();\n        }\n\n        async function requestBreedList() {\n            setBreedList([]);\n            setStatus(\"loading\");\n\n            const res = await fetch(\n                `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n            )\n            const json = await res.json();\n            // save result, so when users come back they get the response again & we don't have to \n            // make mulitple calls to the API\n            localCache[animal] = json.breeds || [];\n            setBreedList(localCache[animal])\n            setStatus(\"loaded\");\n        }\n    }, [animal])\n\nreturn [breedList, status];\n}","// Anything capitalized, React assumes you created. Anything lowercase is an actual name of html element.\n// props: property passed from one parent component to child component (one way data flow). Makes it easy and flexible to dynamically generate content\n\nimport { Link } from \"react-router-dom\";\n\nconst Pet = ({\n    name,\n    animal,\n    breed,\n    images,\n    location,\n    id\n}) => {\n\nlet hero = \"http://pets-images.dev-apis.com/pets/home.jpg\";\nif(images.length) {\n    hero = images[0]\n}\n\n    return (\n        <Link to={`/details/${id}`} className=\"relative block\">\n           <div>\n               <img src={hero} alt={name} />\n           </div>\n           <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-tr from-white to-transparent pr-2 pt-2 text-center\">\n               <h1>{name}</h1>\n               <h2>{`${animal} - ${breed} - ${location}`}</h2>\n           </div>\n        </Link>\n    );\n};\n\nexport default Pet;","import Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n   return (\n       <div className='grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3'>\n       {!pets.length ? (\n           <h2>No Pets Found</h2>\n       ) : (\n           pets.map(pet => (\n               <Pet \n                    animal={pet.animal}\n                    key={pet.id}\n                    name={pet.name}\n                    breed={pet.breed}\n                    images={pet.images}\n                    location={`${pet.city}, ${pet.state}`}\n                    id={pet.id}\n                    />\n           ))\n       )}\n       \n       </div>\n   )\n}\n\n\nexport default Results;","import { useState, useEffect, useContext } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nimport useBreedList from \"./useBreedList\";\nimport Results from \"./Results\";\n\n\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\nconst SearchParams = () => {\n\n    const [location, setLocation] = useState(\"\");\n    const [animal, setAnimal] = useState(\"\");\n    const [breed, setBreed] = useState(\"\");\n    const [pets, setPets] = useState([]);\n    const [breeds] = useBreedList(animal);\n    const [theme, setTheme] = useContext(ThemeContext);\n\n    useEffect(() => {\n        requestPets()\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    async function requestPets() {\n        const res = await fetch(\n            `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n\n        );\n        const json = await res.json()\n        setPets(json.pets)\n    }\n\n    return (\n        <div\n            className=\"my-0 mx-auto w-11/12\">\n            <form className=\"p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\n                onSubmit={e => {\n                    e.preventDefault();\n                    requestPets();\n                }}\n            >\n                <label className=\"search-label\" htmlFor=\"location\">\n                    Location\n                    <input \n                    className=\"search-control\"\n                    id=\"location\" \n                    onChange={(e) => setLocation(e.target.value)} value={location} placeholder=\"Location\" />\n                </label>\n                <label className=\"search-label\" htmlFor=\"animal\">\n                    Animal\n                <select\n                        className=\"search-control\"\n                        id=\"animal\"\n                        value={animal}\n                        onChange={e => setAnimal(e.target.value)}\n                        onBlur={e => setAnimal(e.target.value)}\n                    >\n                        {/* the empty space above other animal options */}\n                        <option />\n                        {ANIMALS.map(animal => (\n                            <option value={animal} key={animal}>\n                                {animal}\n                            </option>\n\n                        ))}\n                    </select>\n                </label>\n                <label className=\"search-label\" htmlFor=\"breed\">\n                    Breed\n                <select\n                        className=\"search-control\"\n                        id=\"breed\"\n                        value={breed}\n                        onChange={e => setBreed(e.target.value)}\n                        onBlur={e => setBreed(e.target.value)}\n                    >\n                        {/* the empty space above other animal options */}\n                        <option />\n                        {breeds.map(breed => (\n                            <option value={breed} key={breed}>\n                                {breed}\n                            </option>\n\n                        ))}\n                    </select>\n                </label>\n                <label className=\"search-label\" htmlFor=\"theme\">\n                    Theme\n                    <select\n                        className=\"search-control\"\n                        value={theme}\n                        onChange={e => setTheme(e.target.value)}\n                        onBlur={e => setTheme(e.target.value)}\n                    >\n                        <option value=\"darkblue\">Dark Blue</option>\n                        <option value=\"peru\">Peru</option>\n                        <option value=\"chartreuse\">Chartreuse</option>\n                        <option value=\"mediumorchid\">Medium Orchid</option>\n                    </select>\n                </label>\n                <button className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none\" style={{ backgroundColor: theme }}>Submit</button>\n            </form >\n\n            <Results pets={pets} />\n\n\n        </div >\n    )\n}\n\n\nexport default SearchParams;"]}